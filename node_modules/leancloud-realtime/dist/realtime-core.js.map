{"version":3,"file":"realtime-core.js","sources":["../proto/message-compiled.js","../proto/message.js","../src/utils/global.js","../src/utils/expirable.js","../src/utils/cache.js","../src/utils/index.js","../src/websocket-plus.js","../src/error.js","../src/connection.js","../src/plugin.js","../src/realtime.js"],"sourcesContent":["module.exports = require('protobufjs/dist/protobuf-light')\n  .newBuilder({})\n  ['import']({\n    package: 'push_server.messages2',\n    syntax: 'proto2',\n    options: {\n      objc_class_prefix: 'AVIM',\n    },\n    messages: [\n      {\n        name: 'JsonObjectMessage',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'data',\n            id: 1,\n          },\n        ],\n      },\n      {\n        name: 'UnreadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'required',\n            type: 'int32',\n            name: 'unread',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentioned',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 10,\n          },\n        ],\n      },\n      {\n        name: 'LogItem',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'msgId',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'ackAt',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'readAt',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'bin',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 11,\n          },\n        ],\n      },\n      {\n        name: 'ConvMemberInfo',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'role',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'infoId',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'DataCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'ids',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'JsonObjectMessage',\n            name: 'msg',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'offline',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'SessionCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'ua',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'r',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'tag',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'deviceId',\n            id: 7,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'sessionPeerIds',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'onlineSessionPeerIds',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'st',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'stTtl',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'code',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'reason',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'deviceToken',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'sp',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'detail',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastUnreadNotifTime',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastPatchTime',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'configBitmap',\n            id: 19,\n          },\n        ],\n      },\n      {\n        name: 'ErrorCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'int32',\n            name: 'code',\n            id: 1,\n          },\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'reason',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'appCode',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'detail',\n            id: 4,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'pids',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appMsg',\n            id: 6,\n          },\n        ],\n      },\n      {\n        name: 'DirectCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'msg',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'fromPeerId',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'offline',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'hasMore',\n            id: 6,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toPeerIds',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'r',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'id',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'dt',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'roomId',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pushData',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'will',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 19,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 20,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 21,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 22,\n          },\n        ],\n      },\n      {\n        name: 'AckCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'code',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'reason',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uid',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'fromts',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'tots',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'type',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'ids',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'appCode',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appMsg',\n            id: 12,\n          },\n        ],\n      },\n      {\n        name: 'UnreadCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'UnreadTuple',\n            name: 'convs',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'notifTime',\n            id: 2,\n          },\n        ],\n      },\n      {\n        name: 'ConvCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'm',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'unique',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cdate',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'initBy',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'sort',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'skip',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'flag',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'count',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'udate',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'statusSub',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'statusPub',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'statusTTL',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uniqueId',\n            id: 19,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'targetClientId',\n            id: 20,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxReadTimestamp',\n            id: 21,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxAckTimestamp',\n            id: 22,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'queryAllMembers',\n            id: 23,\n          },\n          {\n            rule: 'repeated',\n            type: 'MaxReadTuple',\n            name: 'maxReadTuples',\n            id: 24,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 25,\n          },\n          {\n            rule: 'optional',\n            type: 'ConvMemberInfo',\n            name: 'info',\n            id: 26,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'tempConv',\n            id: 27,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'tempConvTTL',\n            id: 28,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'tempConvIds',\n            id: 29,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'allowedPids',\n            id: 30,\n          },\n          {\n            rule: 'repeated',\n            type: 'ErrorCommand',\n            name: 'failedPids',\n            id: 31,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'next',\n            id: 40,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'results',\n            id: 100,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'where',\n            id: 101,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'attr',\n            id: 103,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'attrModified',\n            id: 104,\n          },\n        ],\n      },\n      {\n        name: 'RoomCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'roomId',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 5,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'roomPeerIds',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'byPeerId',\n            id: 7,\n          },\n        ],\n      },\n      {\n        name: 'LogsCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'l',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'tt',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'tmid',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'checksum',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'stored',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'QueryDirection',\n            name: 'direction',\n            id: 10,\n            options: {\n              default: 'OLD',\n            },\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'tIncluded',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'ttIncluded',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'lctype',\n            id: 13,\n          },\n          {\n            rule: 'repeated',\n            type: 'LogItem',\n            name: 'logs',\n            id: 105,\n          },\n        ],\n        enums: [\n          {\n            name: 'QueryDirection',\n            syntax: 'proto2',\n            values: [\n              {\n                name: 'OLD',\n                id: 1,\n              },\n              {\n                name: 'NEW',\n                id: 2,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        name: 'RcpCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'id',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'read',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 5,\n          },\n        ],\n      },\n      {\n        name: 'ReadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'MaxReadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxAckTimestamp',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxReadTimestamp',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'ReadCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 2,\n          },\n          {\n            rule: 'repeated',\n            type: 'ReadTuple',\n            name: 'convs',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'PresenceCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'StatusType',\n            name: 'status',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'sessionPeerIds',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'ReportCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'initiative',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'type',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'PatchItem',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'recall',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchCode',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'patchReason',\n            id: 12,\n          },\n        ],\n      },\n      {\n        name: 'PatchCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'PatchItem',\n            name: 'patches',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastPatchTime',\n            id: 2,\n          },\n        ],\n      },\n      {\n        name: 'PubsubCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'topic',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'subtopic',\n            id: 4,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'topics',\n            id: 5,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'subtopics',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'results',\n            id: 7,\n          },\n        ],\n      },\n      {\n        name: 'BlacklistCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'srcCid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toPids',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'srcPid',\n            id: 3,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toCids',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'next',\n            id: 6,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'blockedPids',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'blockedCids',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'allowedPids',\n            id: 10,\n          },\n          {\n            rule: 'repeated',\n            type: 'ErrorCommand',\n            name: 'failedPids',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 14,\n          },\n        ],\n      },\n      {\n        name: 'GenericCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'CommandType',\n            name: 'cmd',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'OpType',\n            name: 'op',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appId',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'peerId',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'i',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'installationId',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'priority',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'service',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'serverTs',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'DataCommand',\n            name: 'dataMessage',\n            id: 101,\n          },\n          {\n            rule: 'optional',\n            type: 'SessionCommand',\n            name: 'sessionMessage',\n            id: 102,\n          },\n          {\n            rule: 'optional',\n            type: 'ErrorCommand',\n            name: 'errorMessage',\n            id: 103,\n          },\n          {\n            rule: 'optional',\n            type: 'DirectCommand',\n            name: 'directMessage',\n            id: 104,\n          },\n          {\n            rule: 'optional',\n            type: 'AckCommand',\n            name: 'ackMessage',\n            id: 105,\n          },\n          {\n            rule: 'optional',\n            type: 'UnreadCommand',\n            name: 'unreadMessage',\n            id: 106,\n          },\n          {\n            rule: 'optional',\n            type: 'ReadCommand',\n            name: 'readMessage',\n            id: 107,\n          },\n          {\n            rule: 'optional',\n            type: 'RcpCommand',\n            name: 'rcpMessage',\n            id: 108,\n          },\n          {\n            rule: 'optional',\n            type: 'LogsCommand',\n            name: 'logsMessage',\n            id: 109,\n          },\n          {\n            rule: 'optional',\n            type: 'ConvCommand',\n            name: 'convMessage',\n            id: 110,\n          },\n          {\n            rule: 'optional',\n            type: 'RoomCommand',\n            name: 'roomMessage',\n            id: 111,\n          },\n          {\n            rule: 'optional',\n            type: 'PresenceCommand',\n            name: 'presenceMessage',\n            id: 112,\n          },\n          {\n            rule: 'optional',\n            type: 'ReportCommand',\n            name: 'reportMessage',\n            id: 113,\n          },\n          {\n            rule: 'optional',\n            type: 'PatchCommand',\n            name: 'patchMessage',\n            id: 114,\n          },\n          {\n            rule: 'optional',\n            type: 'PubsubCommand',\n            name: 'pubsubMessage',\n            id: 115,\n          },\n          {\n            rule: 'optional',\n            type: 'BlacklistCommand',\n            name: 'blacklistMessage',\n            id: 116,\n          },\n        ],\n      },\n    ],\n    enums: [\n      {\n        name: 'CommandType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'session',\n            id: 0,\n          },\n          {\n            name: 'conv',\n            id: 1,\n          },\n          {\n            name: 'direct',\n            id: 2,\n          },\n          {\n            name: 'ack',\n            id: 3,\n          },\n          {\n            name: 'rcp',\n            id: 4,\n          },\n          {\n            name: 'unread',\n            id: 5,\n          },\n          {\n            name: 'logs',\n            id: 6,\n          },\n          {\n            name: 'error',\n            id: 7,\n          },\n          {\n            name: 'login',\n            id: 8,\n          },\n          {\n            name: 'data',\n            id: 9,\n          },\n          {\n            name: 'room',\n            id: 10,\n          },\n          {\n            name: 'read',\n            id: 11,\n          },\n          {\n            name: 'presence',\n            id: 12,\n          },\n          {\n            name: 'report',\n            id: 13,\n          },\n          {\n            name: 'echo',\n            id: 14,\n          },\n          {\n            name: 'loggedin',\n            id: 15,\n          },\n          {\n            name: 'logout',\n            id: 16,\n          },\n          {\n            name: 'loggedout',\n            id: 17,\n          },\n          {\n            name: 'patch',\n            id: 18,\n          },\n          {\n            name: 'pubsub',\n            id: 19,\n          },\n          {\n            name: 'blacklist',\n            id: 20,\n          },\n          {\n            name: 'goaway',\n            id: 21,\n          },\n        ],\n      },\n      {\n        name: 'OpType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'open',\n            id: 1,\n          },\n          {\n            name: 'add',\n            id: 2,\n          },\n          {\n            name: 'remove',\n            id: 3,\n          },\n          {\n            name: 'close',\n            id: 4,\n          },\n          {\n            name: 'opened',\n            id: 5,\n          },\n          {\n            name: 'closed',\n            id: 6,\n          },\n          {\n            name: 'query',\n            id: 7,\n          },\n          {\n            name: 'query_result',\n            id: 8,\n          },\n          {\n            name: 'conflict',\n            id: 9,\n          },\n          {\n            name: 'added',\n            id: 10,\n          },\n          {\n            name: 'removed',\n            id: 11,\n          },\n          {\n            name: 'refresh',\n            id: 12,\n          },\n          {\n            name: 'refreshed',\n            id: 13,\n          },\n          {\n            name: 'start',\n            id: 30,\n          },\n          {\n            name: 'started',\n            id: 31,\n          },\n          {\n            name: 'joined',\n            id: 32,\n          },\n          {\n            name: 'members_joined',\n            id: 33,\n          },\n          {\n            name: 'left',\n            id: 39,\n          },\n          {\n            name: 'members_left',\n            id: 40,\n          },\n          {\n            name: 'results',\n            id: 42,\n          },\n          {\n            name: 'count',\n            id: 43,\n          },\n          {\n            name: 'result',\n            id: 44,\n          },\n          {\n            name: 'update',\n            id: 45,\n          },\n          {\n            name: 'updated',\n            id: 46,\n          },\n          {\n            name: 'mute',\n            id: 47,\n          },\n          {\n            name: 'unmute',\n            id: 48,\n          },\n          {\n            name: 'status',\n            id: 49,\n          },\n          {\n            name: 'members',\n            id: 50,\n          },\n          {\n            name: 'max_read',\n            id: 51,\n          },\n          {\n            name: 'is_member',\n            id: 52,\n          },\n          {\n            name: 'member_info_update',\n            id: 53,\n          },\n          {\n            name: 'member_info_updated',\n            id: 54,\n          },\n          {\n            name: 'member_info_changed',\n            id: 55,\n          },\n          {\n            name: 'join',\n            id: 80,\n          },\n          {\n            name: 'invite',\n            id: 81,\n          },\n          {\n            name: 'leave',\n            id: 82,\n          },\n          {\n            name: 'kick',\n            id: 83,\n          },\n          {\n            name: 'reject',\n            id: 84,\n          },\n          {\n            name: 'invited',\n            id: 85,\n          },\n          {\n            name: 'kicked',\n            id: 86,\n          },\n          {\n            name: 'upload',\n            id: 100,\n          },\n          {\n            name: 'uploaded',\n            id: 101,\n          },\n          {\n            name: 'subscribe',\n            id: 120,\n          },\n          {\n            name: 'subscribed',\n            id: 121,\n          },\n          {\n            name: 'unsubscribe',\n            id: 122,\n          },\n          {\n            name: 'unsubscribed',\n            id: 123,\n          },\n          {\n            name: 'is_subscribed',\n            id: 124,\n          },\n          {\n            name: 'modify',\n            id: 150,\n          },\n          {\n            name: 'modified',\n            id: 151,\n          },\n          {\n            name: 'block',\n            id: 170,\n          },\n          {\n            name: 'unblock',\n            id: 171,\n          },\n          {\n            name: 'blocked',\n            id: 172,\n          },\n          {\n            name: 'unblocked',\n            id: 173,\n          },\n          {\n            name: 'members_blocked',\n            id: 174,\n          },\n          {\n            name: 'members_unblocked',\n            id: 175,\n          },\n          {\n            name: 'check_block',\n            id: 176,\n          },\n          {\n            name: 'check_result',\n            id: 177,\n          },\n          {\n            name: 'add_shutup',\n            id: 180,\n          },\n          {\n            name: 'remove_shutup',\n            id: 181,\n          },\n          {\n            name: 'query_shutup',\n            id: 182,\n          },\n          {\n            name: 'shutup_added',\n            id: 183,\n          },\n          {\n            name: 'shutup_removed',\n            id: 184,\n          },\n          {\n            name: 'shutup_result',\n            id: 185,\n          },\n          {\n            name: 'shutuped',\n            id: 186,\n          },\n          {\n            name: 'unshutuped',\n            id: 187,\n          },\n          {\n            name: 'members_shutuped',\n            id: 188,\n          },\n          {\n            name: 'members_unshutuped',\n            id: 189,\n          },\n          {\n            name: 'check_shutup',\n            id: 190,\n          },\n        ],\n      },\n      {\n        name: 'StatusType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'on',\n            id: 1,\n          },\n          {\n            name: 'off',\n            id: 2,\n          },\n        ],\n      },\n    ],\n    isNamespace: true,\n  })\n  .build();\n","import messages from './message-compiled';\n\nconst {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  BlacklistCommand,\n  PatchCommand,\n  PatchItem,\n  ConvMemberInfo,\n  CommandType,\n  OpType,\n  StatusType,\n} = messages.push_server.messages2;\n\nexport {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  BlacklistCommand,\n  PatchCommand,\n  PatchItem,\n  ConvMemberInfo,\n  CommandType,\n  OpType,\n  StatusType,\n};\n","/* eslint-disable */\nexport default (typeof global !== 'undefined'\n  ? global\n  : typeof window !== 'undefined' ? window : {});\n","import d from 'debug';\n\nconst EXPIRED = Symbol('expired');\nconst debug = d('LC:Expirable');\nexport default class Expirable {\n  constructor(value, ttl) {\n    this.originalValue = value;\n    if (typeof ttl === 'number') {\n      this.expiredAt = Date.now() + ttl;\n    }\n  }\n\n  get value() {\n    const expired = this.expiredAt && this.expiredAt <= Date.now();\n    if (expired) debug(`expired: ${this.originalValue}`);\n    return expired ? EXPIRED : this.originalValue;\n  }\n}\nExpirable.EXPIRED = EXPIRED;\n","import d from 'debug';\nimport Expirable from './expirable';\n\nconst debug = d('LC:Cache');\nexport default class Cache {\n  constructor(name = 'anonymous') {\n    this.name = name;\n    this._map = {};\n  }\n\n  get(key) {\n    const cache = this._map[key];\n    if (cache) {\n      const { value } = cache;\n      if (value !== Expirable.EXPIRED) {\n        debug('[%s] hit: %s', this.name, key);\n        return value;\n      }\n      delete this._map[key];\n    }\n    debug(`[${this.name}] missed: ${key}`);\n    return null;\n  }\n\n  set(key, value, ttl) {\n    debug('[%s] set: %s %o %d', this.name, key, value, ttl);\n    this._map[key] = new Expirable(value, ttl);\n  }\n}\n","import isPlainObject from 'lodash/isPlainObject';\nimport global from './global';\n\nexport { global };\n\nexport const tryAll = promiseConstructors => {\n  const promise = new Promise(promiseConstructors[0]);\n  if (promiseConstructors.length === 1) {\n    return promise;\n  }\n  return promise.catch(() => tryAll(promiseConstructors.slice(1)));\n};\n\n// eslint-disable-next-line no-sequences\nexport const tap = interceptor => value => (interceptor(value), value);\n\nexport const finalize = callback => [\n  // eslint-disable-next-line no-sequences\n  value => (callback(), value),\n  error => {\n    callback();\n    throw error;\n  },\n];\n\nexport { default as Expirable } from './expirable';\nexport { default as Cache } from './cache';\n\n/**\n * 将对象转换为 Date，支持 string、number、ProtoBuf Long 以及 LeanCloud 的 Date 类型，\n * 其他情况下（包括对象为 falsy）返回原值。\n * @private\n */\nexport const decodeDate = date => {\n  if (!date) return date;\n  if (typeof date === 'string' || typeof date === 'number') {\n    return new Date(date);\n  }\n  if (date.__type === 'Date' && date.iso) {\n    return new Date(date.iso);\n  }\n  // Long\n  if (typeof date.toNumber === 'function') {\n    return new Date(date.toNumber());\n  }\n  return date;\n};\n/**\n * 获取 Date 的毫秒数，如果不是一个 Date 返回 undefined。\n * @private\n */\nexport const getTime = date =>\n  date && date.getTime ? date.getTime() : undefined;\n\n/**\n * 解码对象中的 LeanCloud 数据结构。\n * 目前仅会处理 Date 类型。\n * @private\n */\nexport const decode = value => {\n  if (!value) return value;\n  if (value.__type === 'Date' && value.iso) {\n    return new Date(value.iso);\n  }\n  if (Array.isArray(value)) {\n    return value.map(decode);\n  }\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(\n      (result, key) => ({\n        ...result,\n        [key]: decode(value[key]),\n      }),\n      {}\n    );\n  }\n  return value;\n};\n/**\n * 将对象中的特殊类型编码为 LeanCloud 数据结构。\n * 目前仅会处理 Date 类型。\n * @private\n */\nexport const encode = value => {\n  if (value instanceof Date) return { __type: 'Date', iso: value.toJSON() };\n  if (Array.isArray(value)) {\n    return value.map(encode);\n  }\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(\n      (result, key) => ({\n        ...result,\n        [key]: encode(value[key]),\n      }),\n      {}\n    );\n  }\n  return value;\n};\n\nexport const keyRemap = (keymap, obj) =>\n  Object.keys(obj).reduce((newObj, key) => {\n    const newKey = keymap[key] || key;\n    return Object.assign(newObj, {\n      [newKey]: obj[key],\n    });\n  }, {});\n\nexport const isIE10 =\n  global.navigator &&\n  global.navigator.userAgent &&\n  global.navigator.userAgent.indexOf('MSIE 10.') !== -1;\n\n/* eslint-disable no-proto */\nexport const getStaticProperty = (klass, property) =>\n  klass[property] ||\n  (klass.__proto__ ? getStaticProperty(klass.__proto__, property) : undefined);\n/* eslint-enable no-proto */\n\nexport const union = (a, b) => Array.from(new Set([...a, ...b]));\nexport const difference = (a, b) =>\n  Array.from((bSet => new Set(a.filter(x => !bSet.has(x))))(new Set(b)));\n\nconst map = new WeakMap();\n\n// protected property helper\nexport const internal = object => {\n  if (!map.has(object)) {\n    map.set(object, {});\n  }\n  return map.get(object);\n};\n\nexport const compact = (obj, filter) => {\n  if (!isPlainObject(obj)) return obj;\n  const object = Object.assign({}, obj);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const prop in object) {\n    if ({}.hasOwnProperty.call(object, prop)) {\n      const value = object[prop];\n      if (value === filter) {\n        delete object[prop];\n      } else {\n        object[prop] = compact(value, filter);\n      }\n    }\n  }\n  return object;\n};\n\n// debug utility\nconst removeNull = obj => compact(obj, null);\nexport const trim = message => removeNull(JSON.parse(JSON.stringify(message)));\n\nexport const ensureArray = target => {\n  if (Array.isArray(target)) {\n    return target;\n  }\n  if (target === undefined || target === null) {\n    return [];\n  }\n  return [target];\n};\n\nexport const setValue = (target, key, value) => {\n  // '.' is not allowed in Class keys, escaping is not in concern now.\n  const segs = key.split('.');\n  const lastSeg = segs.pop();\n  let currentTarget = target;\n  segs.forEach(seg => {\n    if (currentTarget[seg] === undefined) currentTarget[seg] = {};\n    currentTarget = currentTarget[seg];\n  });\n  currentTarget[lastSeg] = value;\n  return target;\n};\n\nexport const isWeapp =\n  // eslint-disable-next-line no-undef\n  typeof wx === 'object' && typeof wx.connectSocket === 'function';\n\n// throttle decorator\nexport const throttle = wait => (target, property, descriptor) => {\n  const callback = descriptor.value;\n  // very naive, internal use only\n  if (callback.length) {\n    throw new Error('throttled function should not accept any arguments');\n  }\n  return {\n    ...descriptor,\n    value() {\n      let { throttleMeta } = internal(this);\n      if (!throttleMeta) {\n        throttleMeta = {};\n        internal(this).throttleMeta = throttleMeta;\n      }\n      let { [property]: propertyMeta } = throttleMeta;\n      if (!propertyMeta) {\n        propertyMeta = {};\n        throttleMeta[property] = propertyMeta;\n      }\n      const { previouseTimestamp = 0, timeout } = propertyMeta;\n      const now = Date.now();\n      const remainingTime = wait - (now - previouseTimestamp);\n      if (remainingTime <= 0) {\n        throttleMeta[property].previouseTimestamp = now;\n        callback.apply(this);\n      } else if (!timeout) {\n        propertyMeta.timeout = setTimeout(() => {\n          propertyMeta.previouseTimestamp = Date.now();\n          delete propertyMeta.timeout;\n          callback.apply(this);\n        }, remainingTime);\n      }\n    },\n  };\n};\n","// WebSocket with auto reconnecting feature, backup endpoint and EventEmitter interface.\n\nimport d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport StateMachine from 'javascript-state-machine';\n\nimport WebSocket from 'ws';\n\nimport { ensureArray, tryAll, global } from './utils';\n\nconst debug = d('LC:WebSocketPlus');\n\nexport const OPEN = 'open';\nexport const DISCONNECT = 'disconnect';\nexport const RECONNECT = 'reconnect';\nexport const RETRY = 'retry';\nexport const SCHEDULE = 'schedule';\nexport const OFFLINE = 'offline';\nexport const ONLINE = 'online';\nexport const ERROR = 'error';\nexport const MESSAGE = 'message';\n\nconst HEARTBEAT_TIME = 180000;\nconst TIMEOUT_TIME = 380000;\n\nconst DEFAULT_RETRY_STRATEGY = attempt => Math.min(1000 * 2 ** attempt, 300000);\n\nconst requireConnected = (target, name, descriptor) =>\n  Object.assign({}, descriptor, {\n    value: function requireConnectedWrapper(...args) {\n      this.checkConnectionAvailability(name);\n      return descriptor.value.call(this, ...args);\n    },\n  });\n\nclass WebSocketPlus extends EventEmitter {\n  get urls() {\n    return this._urls;\n  }\n\n  set urls(urls) {\n    this._urls = ensureArray(urls);\n  }\n\n  constructor(getUrls, protocol) {\n    if (typeof WebSocket === 'undefined') {\n      throw new Error(\n        'WebSocket is undefined. Polyfill is required in this runtime.'\n      );\n    }\n    super();\n    this.init();\n    this._protocol = protocol;\n    Promise.resolve(typeof getUrls === 'function' ? getUrls() : getUrls)\n      .then(ensureArray)\n      .then(urls => {\n        this._urls = urls;\n        return this._open();\n      })\n      .then(() => {\n        this.__postponeTimeoutTimer = this._postponeTimeoutTimer.bind(this);\n        if (global.addEventListener) {\n          this.__pause = () => {\n            if (this.can('pause')) this.pause();\n          };\n          this.__resume = () => {\n            if (this.can('resume')) this.resume();\n          };\n          global.addEventListener('offline', this.__pause);\n          global.addEventListener('online', this.__resume);\n        }\n        this.open();\n      })\n      .catch(this.throw.bind(this));\n  }\n\n  _open() {\n    return this._createWs(this._urls, this._protocol).then(ws => {\n      const [first, ...reset] = this._urls;\n      this._urls = [...reset, first];\n      return ws;\n    });\n  }\n\n  _createWs(urls, protocol) {\n    return tryAll(\n      urls.map(url => (resolve, reject) => {\n        debug(`connect [${url}] ${protocol}`);\n        const ws = protocol ? new WebSocket(url, protocol) : new WebSocket(url);\n        ws.binaryType = this.binaryType || 'arraybuffer';\n        ws.onopen = () => resolve(ws);\n        ws.onclose = error => {\n          if (error instanceof Error) {\n            return reject(error);\n          }\n          // in browser, error event is useless\n          return reject(new Error(`Failed to connect [${url}]`));\n        };\n        ws.onerror = ws.onclose;\n      })\n    ).then(ws => {\n      this._ws = ws;\n      this._ws.onclose = this._handleClose.bind(this);\n      this._ws.onmessage = this._handleMessage.bind(this);\n      return ws;\n    });\n  }\n\n  _destroyWs() {\n    const ws = this._ws;\n    if (!ws) return;\n    ws.onopen = null;\n    ws.onclose = null;\n    ws.onerror = null;\n    ws.onmessage = null;\n    this._ws = null;\n    ws.close();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onbeforeevent(event, from, to, ...payload) {\n    debug(`${event}: ${from} -> ${to}`, ...payload);\n  }\n\n  onopen() {\n    this.emit(OPEN);\n  }\n\n  onconnected() {\n    this._startConnectionKeeper();\n  }\n\n  onleaveconnected(event, from, to) {\n    this._stopConnectionKeeper();\n    this._destroyWs();\n    if (to === 'offline' || to === 'disconnected') {\n      this.emit(DISCONNECT);\n    }\n  }\n\n  onpause() {\n    this.emit(OFFLINE);\n  }\n\n  onbeforeresume() {\n    this.emit(ONLINE);\n  }\n\n  onreconnect() {\n    this.emit(RECONNECT);\n  }\n\n  ondisconnected(event, from, to, attempt = 0) {\n    const delay = DEFAULT_RETRY_STRATEGY.call(null, attempt);\n    debug(`schedule attempt=${attempt} delay=${delay}`);\n    this.emit(SCHEDULE, attempt, delay);\n    if (this.__scheduledRetry) {\n      clearTimeout(this.__scheduledRetry);\n    }\n    this.__scheduledRetry = setTimeout(() => {\n      if (this.is('disconnected')) {\n        this.retry(attempt);\n      }\n    }, delay);\n  }\n\n  onretry(event, from, to, attempt = 0) {\n    this.emit(RETRY, attempt);\n    this._open().then(\n      () => (this.can('reconnect') ? this.reconnect() : this._destroyWs()),\n      () => this.can('fail') && this.fail(attempt + 1)\n    );\n  }\n\n  onerror(event, from, to, error) {\n    this.emit(ERROR, error);\n  }\n\n  onclose() {\n    if (global.removeEventListener) {\n      if (this.__pause) global.removeEventListener('offline', this.__pause);\n      if (this.__resume) global.removeEventListener('online', this.__resume);\n    }\n  }\n\n  checkConnectionAvailability(name = 'API') {\n    if (!this.is('connected')) {\n      const currentState = this.current;\n      console.warn(\n        `${name} should not be called when the connection is ${currentState}`\n      );\n      if (this.is('disconnected') || this.is('reconnecting')) {\n        console.warn(\n          'disconnect and reconnect event should be handled to avoid such calls.'\n        );\n      }\n      throw new Error('Connection unavailable');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  _ping() {\n    debug('ping');\n    try {\n      this.ping();\n    } catch (error) {\n      console.warn(`websocket ping error: ${error.message}`);\n    }\n  }\n\n  ping() {\n    if (this._ws.ping) {\n      this._ws.ping();\n    } else {\n      console.warn(`The WebSocket implement does not support sending ping frame.\n        Override ping method to use application defined ping/pong mechanism.`);\n    }\n  }\n\n  _postponeTimeoutTimer() {\n    debug('_postponeTimeoutTimer');\n    this._clearTimeoutTimers();\n    this._timeoutTimer = setTimeout(() => {\n      debug('timeout');\n      this.disconnect();\n    }, TIMEOUT_TIME);\n  }\n\n  _clearTimeoutTimers() {\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n    }\n  }\n\n  _startConnectionKeeper() {\n    debug('start connection keeper');\n    this._heartbeatTimer = setInterval(this._ping.bind(this), HEARTBEAT_TIME);\n    const addListener = this._ws.addListener || this._ws.addEventListener;\n    addListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n    addListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n    this._postponeTimeoutTimer();\n  }\n\n  _stopConnectionKeeper() {\n    debug('stop connection keeper');\n    // websockets/ws#489\n    const removeListener =\n      this._ws.removeListener || this._ws.removeEventListener;\n    removeListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n    removeListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n    this._clearTimeoutTimers();\n    if (this._heartbeatTimer) {\n      clearInterval(this._heartbeatTimer);\n    }\n  }\n\n  _handleClose(event) {\n    debug(`ws closed [${event.code}] ${event.reason}`);\n    // socket closed manually, ignore close event.\n    if (this.isFinished()) return;\n    this.handleClose(event);\n  }\n\n  handleClose() {\n    // reconnect\n    this.disconnect();\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  send(data) {\n    debug('send', data);\n    this._ws.send(data);\n  }\n\n  _handleMessage(event) {\n    debug('message', event.data);\n    this.handleMessage(event.data);\n  }\n\n  handleMessage(message) {\n    this.emit(MESSAGE, message);\n  }\n}\n\nStateMachine.create({\n  target: WebSocketPlus.prototype,\n  initial: {\n    state: 'initialized',\n    event: 'init',\n    defer: true,\n  },\n  terminal: 'closed',\n  events: [\n    {\n      name: 'open',\n      from: 'initialized',\n      to: 'connected',\n    },\n    {\n      name: 'disconnect',\n      from: 'connected',\n      to: 'disconnected',\n    },\n    {\n      name: 'retry',\n      from: 'disconnected',\n      to: 'reconnecting',\n    },\n    {\n      name: 'fail',\n      from: 'reconnecting',\n      to: 'disconnected',\n    },\n    {\n      name: 'reconnect',\n      from: 'reconnecting',\n      to: 'connected',\n    },\n    {\n      name: 'pause',\n      from: ['connected', 'disconnected', 'reconnecting'],\n      to: 'offline',\n    },\n    {},\n    {\n      name: 'resume',\n      from: 'offline',\n      to: 'disconnected',\n    },\n    {\n      name: 'close',\n      from: ['connected', 'disconnected', 'reconnecting', 'offline'],\n      to: 'closed',\n    },\n    {\n      name: 'throw',\n      from: '*',\n      to: 'error',\n    },\n  ],\n});\n\nexport default WebSocketPlus;\n","export const error = Object.freeze({\n  1000: {\n    name: 'CLOSE_NORMAL',\n  },\n  1006: {\n    name: 'CLOSE_ABNORMAL',\n  },\n  4100: {\n    name: 'APP_NOT_AVAILABLE',\n    message: 'App not exists or realtime message service is disabled.',\n  },\n  4102: {\n    name: 'SIGNATURE_FAILED',\n    message: 'Login signature mismatch.',\n  },\n  4103: {\n    name: 'INVALID_LOGIN',\n    message: 'Malformed clientId.',\n  },\n  4105: {\n    name: 'SESSION_REQUIRED',\n    message: 'Message sent before session opened.',\n  },\n  4107: {\n    name: 'READ_TIMEOUT',\n  },\n  4108: {\n    name: 'LOGIN_TIMEOUT',\n  },\n  4109: {\n    name: 'FRAME_TOO_LONG',\n  },\n  4110: {\n    name: 'INVALID_ORIGIN',\n    message: 'Access denied by domain whitelist.',\n  },\n  4111: {\n    name: 'SESSION_CONFLICT',\n  },\n  4112: {\n    name: 'SESSION_TOKEN_EXPIRED',\n  },\n  4113: {\n    name: 'APP_QUOTA_EXCEEDED',\n    message: 'The daily active users limit exceeded.',\n  },\n  4116: {\n    name: 'MESSAGE_SENT_QUOTA_EXCEEDED',\n    message: 'Command sent too fast.',\n  },\n  4200: {\n    name: 'INTERNAL_ERROR',\n    message: 'Internal error, please contact LeanCloud for support.',\n  },\n  4301: {\n    name: 'CONVERSATION_API_FAILED',\n    message: 'Upstream Conversatoin API failed, see error.detail for details.',\n  },\n  4302: {\n    name: 'CONVERSATION_SIGNATURE_FAILED',\n    message: 'Conversation action signature mismatch.',\n  },\n  4303: {\n    name: 'CONVERSATION_NOT_FOUND',\n  },\n  4304: {\n    name: 'CONVERSATION_FULL',\n  },\n  4305: {\n    name: 'CONVERSATION_REJECTED_BY_APP',\n    message: 'Conversation action rejected by hook.',\n  },\n  4306: {\n    name: 'CONVERSATION_UPDATE_FAILED',\n  },\n  4307: {\n    name: 'CONVERSATION_READ_ONLY',\n  },\n  4308: {\n    name: 'CONVERSATION_NOT_ALLOWED',\n  },\n  4309: {\n    name: 'CONVERSATION_UPDATE_REJECTED',\n    message: 'Conversation update rejected because the client is not a member.',\n  },\n  4310: {\n    name: 'CONVERSATION_QUERY_FAILED',\n    message: 'Conversation query failed because it is too expansive.',\n  },\n  4311: {\n    name: 'CONVERSATION_LOG_FAILED',\n  },\n  4312: {\n    name: 'CONVERSATION_LOG_REJECTED',\n    message:\n      'Message query rejected because the client is not a member of the conversation.',\n  },\n  4313: {\n    name: 'SYSTEM_CONVERSATION_REQUIRED',\n  },\n  4314: {\n    name: 'NORMAL_CONVERSATION_REQUIRED',\n  },\n  4315: {\n    name: 'CONVERSATION_BLACKLISTED',\n    message: 'Blacklisted in the conversation.',\n  },\n  4316: {\n    name: 'TRANSIENT_CONVERSATION_REQUIRED',\n  },\n  4317: {\n    name: 'CONVERSATION_MEMBERSHIP_REQUIRED',\n  },\n  4318: {\n    name: 'CONVERSATION_API_QUOTA_EXCEEDED',\n    message: 'LeanCloud API quota exceeded. You may upgrade your plan.',\n  },\n  4323: {\n    name: 'TEMPORARY_CONVERSATION_EXPIRED',\n    message: 'Temporary conversation expired or does not exist.',\n  },\n  4401: {\n    name: 'INVALID_MESSAGING_TARGET',\n    message: 'Conversation does not exist or client is not a member.',\n  },\n  4402: {\n    name: 'MESSAGE_REJECTED_BY_APP',\n    message: 'Message rejected by hook.',\n  },\n  4403: {\n    name: 'MESSAGE_OWNERSHIP_REQUIRED',\n  },\n  4404: {\n    name: 'MESSAGE_NOT_FOUND',\n  },\n  4405: {\n    name: 'MESSAGE_UPDATE_REJECTED_BY_APP',\n    message: 'Message update rejected by hook.',\n  },\n  4406: {\n    name: 'MESSAGE_EDIT_DISABLED',\n  },\n  4407: {\n    name: 'MESSAGE_RECALL_DISABLED',\n  },\n  5130: {\n    name: 'OWNER_PROMOTION_NOT_ALLOWED',\n    message: \"Updating a member's role to owner is not allowed.\",\n  },\n});\n\nexport const ErrorCode = Object.freeze(\n  Object.keys(error).reduce(\n    (result, code) =>\n      Object.assign(result, {\n        [error[code].name]: Number(code),\n      }),\n    {}\n  )\n);\n\nexport const createError = ({\n  code,\n  reason,\n  appCode,\n  detail,\n  error: errorMessage,\n}) => {\n  let message = reason || detail || errorMessage;\n  let name = reason;\n  if (!message && error[code]) {\n    ({ name } = error[code]);\n    message = error[code].message || name;\n  }\n  if (!message) {\n    message = `Unknow Error: ${code}`;\n  }\n  const err = new Error(message);\n  return Object.assign(err, {\n    code,\n    appCode,\n    detail,\n    name,\n  });\n};\n","import d from 'debug';\nimport WebSocketPlus, {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n} from './websocket-plus';\nimport { createError } from './error';\nimport { GenericCommand, CommandType } from '../proto/message';\nimport { trim, isWeapp } from './utils';\n\nconst debug = d('LC:Connection');\n\nconst COMMAND_TIMEOUT = 20000;\n\nconst EXPIRE = Symbol('expire');\n\nexport {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n  EXPIRE,\n};\n\nexport default class Connection extends WebSocketPlus {\n  constructor(getUrl, { format, version }) {\n    debug('initializing Connection');\n    const protocolString = `lc.${format}.${version}`;\n    if (!isWeapp) {\n      super(getUrl, protocolString);\n    } else {\n      super(\n        getUrl().then(urls =>\n          urls.map(\n            url =>\n              `${url}${\n                url.indexOf('?') === -1 ? '?' : '&'\n              }subprotocol=${encodeURIComponent(protocolString)}`\n          )\n        )\n      );\n    }\n    this._protocalFormat = format;\n    this._commands = {};\n    this._serialId = 0;\n  }\n\n  async send(command, waitingForRespond = true) {\n    let serialId;\n    if (waitingForRespond) {\n      this._serialId += 1;\n      serialId = this._serialId;\n      command.i = serialId; // eslint-disable-line no-param-reassign\n    }\n    if (debug.enabled) debug('↑ %O sent', trim(command));\n\n    let message;\n    if (this._protocalFormat === 'proto2base64') {\n      message = command.toBase64();\n    } else if (command.toArrayBuffer) {\n      message = command.toArrayBuffer();\n    }\n    if (!message) {\n      throw new TypeError(`${command} is not a GenericCommand`);\n    }\n\n    super.send(message);\n\n    if (!waitingForRespond) return undefined;\n    return new Promise((resolve, reject) => {\n      this._commands[serialId] = {\n        resolve,\n        reject,\n        timeout: setTimeout(() => {\n          if (this._commands[serialId]) {\n            if (debug.enabled) debug('✗ %O timeout', trim(command));\n            reject(\n              createError({\n                error: `Command Timeout [cmd:${command.cmd} op:${command.op}]`,\n                name: 'COMMAND_TIMEOUT',\n              })\n            );\n            delete this._commands[serialId];\n          }\n        }, COMMAND_TIMEOUT),\n      };\n    });\n  }\n\n  handleMessage(msg) {\n    let message;\n    try {\n      message = GenericCommand.decode(msg);\n      if (debug.enabled) debug('↓ %O received', trim(message));\n    } catch (e) {\n      console.warn('Decode message failed:', e.message, msg);\n      return;\n    }\n    const serialId = message.i;\n    if (serialId) {\n      if (this._commands[serialId]) {\n        clearTimeout(this._commands[serialId].timeout);\n        if (message.cmd === CommandType.error) {\n          this._commands[serialId].reject(createError(message.errorMessage));\n        } else {\n          this._commands[serialId].resolve(message);\n        }\n        delete this._commands[serialId];\n      } else {\n        console.warn(`Unexpected command received with serialId [${serialId}],\n         which have timed out or never been requested.`);\n      }\n    } else {\n      switch (message.cmd) {\n        case CommandType.error: {\n          this.emit(ERROR, createError(message.errorMessage));\n          return;\n        }\n        case CommandType.goaway: {\n          this.emit(EXPIRE);\n          return;\n        }\n        default: {\n          this.emit(MESSAGE, message);\n        }\n      }\n    }\n  }\n\n  ping() {\n    return this.send(\n      new GenericCommand({\n        cmd: CommandType.echo,\n      })\n    ).catch(error => debug('ping failed:', error));\n  }\n}\n","/* eslint-disable max-len */\n\n/**\n * 插件接口\n *\n * <p>\n * 插件是由一个或多个扩展点组成的字典。SDK 的扩展点可以分为两类：\n * <p>\n * 第一类扩展点是类实例化之后的回调，包括 <code>Realtime</code>、<code>IMClient</code> 与 <code>Conversation</code>。这些扩展点可以通过一个同步的 Decorator 进行扩展。Decorator 接受一个对应的实例并对其进行一些操作。\n * 特别的，由于注册自定义消息类这个需求特别的常用，额外定义一个 messageClasses 扩展点来做这件事情。\n * <p>\n * 第二类扩展点是在某些事件处理前、后可以注入逻辑的点。\n * 其中 <code>beforeMessageParse</code>，<code>afterMessageParse</code> 可以通过一个异步的 Middleware 进行扩展。Middleware 接受一个对象，返回一个同类型对象或同类型对象的 Promise。\n * <code>beforeMessageDispatch</code> 可以通过返回一个 boolean 类型的 shouldDispatch 值来控制是否要继续派发收到的消息。\n * <p>\n * 如果使用了多个插件，这些 hook 会按照插件数组的顺序依次执行。前一个 Middleware 的返回值会作为参数传给后一个 Middleware。\n *\n * @interface Plugin\n * @since 3.1.0\n */\n\n/* eslint-enable max-len */\n\n/**\n * 插件名称，用于在日志中显示异常的插件\n *\n * @name Plugin.name\n * @type string\n */\n\n/**\n * 插件注册的消息类型\n *\n * @name Plugin.messageClasses\n * @type AVMessage[]\n */\n\n/**\n * 在 Realtime 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Realtime 实例。\n *\n * @name Plugin.onRealtimeCreate\n * @type Function\n */\n\n/**\n * 在 IMClient 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 IMClient 实例。\n *\n * @name Plugin.onIMClientCreate\n * @type Function\n */\n\n/**\n * 在 Conversation 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Conversation 实例。\n * 需要注意的是，该扩展点并不是在 <code>{@link IMClient#createConversation}</code> 方法创建成功后调用的 hook，\n * 而是所有的 Conversation 实例化的时候（包括但不限于 query 时）调用的 hook。\n *\n * @name Plugin.onConversationCreate\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之前，对原始消息进行修改。\n * <p>\n * 接受一个参数为原始消息，是某个消息的内容，一般是一个 JSON 对象。\n * 该方法需要返回一个 JSON 对象。如果这个结果是异步得到的，也可以返回一个 Promise(fulfilled with a JSON)。\n *\n * @name Plugin.beforeMessageParse\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之后，对消息实例进行修改。\n * <p>\n * 接受一个参数为消息实例，一般是一个已注册的 Message 类或其子类的实例。\n * 该方法需要返回一个同类型的消息实例。如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.afterMessageParse\n * @type Function\n */\n\n/**\n * 在收到消息之后，派发消息之前，控制是否派发这条消息。\n * <p>\n * 接受参数为 message 与 conversation。\n * 该方法需要返回 boolean 类型的值，如果返回 false 则 SDK 不再派发这条消息，后续的 beforeMessageDispatch 也不会执行。\n * 如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.beforeMessageDispatch\n * @type Function\n * @since 3.4.0\n */\n\nimport { ensureArray, tap } from './utils';\n\nconst checkType = middleware => param => {\n  const { constructor } = param;\n  return Promise.resolve(param)\n    .then(middleware)\n    .then(\n      tap(result => {\n        if (result === undefined || result === null) {\n          // eslint-disable-next-line max-len\n          return console.warn(\n            `Middleware[${middleware._pluginName ||\n              'anonymous plugin'}:${middleware.name ||\n              'anonymous middleware'}] param/return types not match. It returns ${result} while a ${\n              param.constructor.name\n            } expected.`\n          );\n        }\n        if (!(result instanceof constructor)) {\n          // eslint-disable-next-line max-len\n          return console.warn(\n            `Middleware[${middleware._pluginName ||\n              'anonymous plugin'}:${middleware.name ||\n              'anonymous middleware'}] param/return types not match. It returns a ${\n              result.constructor.name\n            } while a ${param.constructor.name} expected.`\n          );\n        }\n        return 0;\n      })\n    );\n};\n\nexport const applyDecorators = (decorators, target) => {\n  if (decorators) {\n    decorators.forEach(decorator => {\n      try {\n        decorator(target);\n      } catch (error) {\n        if (decorator._pluginName) {\n          error.message += `[${decorator._pluginName}]`;\n        }\n        throw error;\n      }\n    });\n  }\n};\n\nexport const applyMiddlewares = middlewares => target =>\n  ensureArray(middlewares).reduce(\n    (previousPromise, middleware) =>\n      previousPromise.then(checkType(middleware)).catch(error => {\n        if (middleware._pluginName) {\n          // eslint-disable-next-line no-param-reassign\n          error.message += `[${middleware._pluginName}]`;\n        }\n        throw error;\n      }),\n    Promise.resolve(target)\n  );\n\nexport const applyDispatcher = (dispatchers, payload) =>\n  ensureArray(dispatchers).reduce(\n    (resultPromise, dispatcher) =>\n      resultPromise\n        .then(\n          shouldDispatch =>\n            shouldDispatch === false ? false : dispatcher(...payload)\n        )\n        .catch(error => {\n          if (dispatcher._pluginName) {\n            // eslint-disable-next-line no-param-reassign\n            error.message += `[${dispatcher._pluginName}]`;\n          }\n          throw error;\n        }),\n    Promise.resolve(true)\n  );\n","import d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport axios from 'axios';\nimport shuffle from 'lodash/shuffle';\nimport Connection, {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n  EXPIRE,\n} from './connection';\nimport { ErrorCode, createError } from './error';\nimport { tap, Cache, trim, internal, ensureArray, isWeapp } from './utils';\nimport { applyDecorators, applyDispatcher } from './plugin';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:Realtime');\nconst debugRequest = d('LC:request');\n\nconst routerCache = new Cache('push-router');\n\nexport default class Realtime extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @param  {Object} options\n   * @param  {String} options.appId\n   * @param  {String} options.appKey （since 4.0.0）\n   * @param  {Boolean} [options.pushOfflineMessages=false] 启用推送离线消息模式（默认为发送未读消息通知模式）\n   * @param  {Boolean} [options.noBinary=false] 设置 WebSocket 使用字符串格式收发消息（默认为二进制格式）。\n   *                                            适用于 WebSocket 实现不支持二进制数据格式的情况\n   * @param  {Boolean} [options.ssl=true] 使用 wss 进行连接\n   * @param  {String|Object} [options.server] 指定私有部署的服务器域名（since 4.0.0）\n   * @param  {String|String[]} [options.RTMServers] 指定私有部署的 RTM 服务器地址（since 4.0.0）\n   * @param  {Plugin[]} [options.plugins] 加载插件（since 3.1.0）\n   */\n  constructor({ plugins, ...options }) {\n    debug('initializing Realtime %s %O', VERSION, options);\n    super();\n    if (typeof options.appId !== 'string') {\n      throw new TypeError(`appId [${options.appId}] is not a string`);\n    }\n    if (typeof options.appKey !== 'string') {\n      throw new TypeError(`appKey [${options.appKey}] is not a string`);\n    }\n    this._options = Object.assign(\n      {\n        appId: undefined,\n        appKey: undefined,\n        pushOfflineMessages: false,\n        noBinary: false,\n        ssl: true,\n        RTMServerName: process.env.RTM_SERVER_NAME, // undocumented on purpose, internal use only\n      },\n      options\n    );\n    this._cache = new Cache('endpoints');\n    const _this = internal(this);\n    _this.clients = new Set();\n    _this.pendingClients = new Set();\n    const mergedPlugins = [\n      ...ensureArray(Realtime.__preRegisteredPlugins),\n      ...ensureArray(plugins),\n    ];\n    debug('Using plugins %o', mergedPlugins.map(plugin => plugin.name));\n    this._plugins = mergedPlugins.reduce((result, plugin) => {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const hook in plugin) {\n        if ({}.hasOwnProperty.call(plugin, hook) && hook !== 'name') {\n          if (plugin.name) {\n            ensureArray(plugin[hook]).forEach(value => {\n              // eslint-disable-next-line no-param-reassign\n              value._pluginName = plugin.name;\n            });\n          }\n          // eslint-disable-next-line no-param-reassign\n          result[hook] = ensureArray(result[hook]).concat(plugin[hook]);\n        }\n      }\n      return result;\n    }, {});\n    // onRealtimeCreate hook\n    applyDecorators(this._plugins.onRealtimeCreate, this);\n  }\n\n  async _request({ method, version = '1.1', path, query, headers, data = {} }) {\n    const { appId, server } = this._options;\n    const { api } = await this.constructor._getServerUrls({\n      appId,\n      server,\n    });\n    const url = `https://${api}/${version}${path}`;\n    const options = {\n      method,\n      params: query,\n      headers: {\n        'X-LC-Id': this._options.appId,\n        'X-LC-Key': this._options.appKey,\n        ...headers,\n      },\n      data,\n    };\n    debugRequest('Req: %O %O', url, options);\n    return axios(url, options).then(\n      response => {\n        debugRequest('Res: %O %O %O', url, response.status, response.data);\n        return response.data;\n      },\n      error => {\n        debugRequest(\n          'Error: %O %O %O',\n          url,\n          error.response.status,\n          error.response.data\n        );\n        if (error.response && error.response.data && error.response.data.code) {\n          throw createError(error.response.data);\n        }\n        throw error;\n      }\n    );\n  }\n\n  _open() {\n    if (this._openPromise) return this._openPromise;\n\n    let format = 'protobuf2';\n    if (this._options.noBinary) {\n      // 不发送 binary data，fallback to base64 string\n      format = 'proto2base64';\n    }\n    let version = 3;\n    if (this._options.pushOfflineMessages) {\n      // 不推送离线消息，而是发送对话的未读通知\n      version = 1;\n    }\n    const protocol = {\n      format,\n      version,\n    };\n    this._openPromise = new Promise((resolve, reject) => {\n      debug('No connection established, create a new one.');\n      const connection = new Connection(\n        () => this._getRTMServers(this._options),\n        protocol\n      );\n      connection\n        .on(OPEN, () => resolve(connection))\n        .on(ERROR, reject)\n        .on(EXPIRE, async () => {\n          debug('Connection expired. Refresh endpoints.');\n          this._cache.set('endpoints', null, 0);\n          connection.urls = await this._getRTMServers(this._options);\n          connection.disconnect();\n        })\n        .on(MESSAGE, this._dispatchCommand.bind(this));\n      /**\n       * 连接断开。\n       * 连接断开可能是因为 SDK 进入了离线状态（see {@link Realtime#event:OFFLINE}），或长时间没有收到服务器心跳。\n       * 连接断开后所有的网络操作都会失败，请在连接断开后禁用相关的 UI 元素。\n       * @event Realtime#DISCONNECT\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event Realtime#SCHEDULE\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       */\n      /**\n       * 正在尝试重新连接\n       * @event Realtime#RETRY\n       * @param {Number} attempt 尝试重连的次数\n       */\n      /**\n       * 连接恢复正常。\n       * 请重新启用在 {@link Realtime#event:DISCONNECT} 事件中禁用的相关 UI 元素\n       * @event Realtime#RECONNECT\n       */\n\n      /**\n       * 客户端连接断开\n       * @event IMClient#DISCONNECT\n       * @see Realtime#event:DISCONNECT\n       * @since 3.2.0\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event IMClient#SCHEDULE\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       * @since 3.2.0\n       */\n      /**\n       * 正在尝试重新连接\n       * @event IMClient#RETRY\n       * @param {Number} attempt 尝试重连的次数\n       * @since 3.2.0\n       */\n\n      /**\n       * 客户端进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event Realtime#OFFLINE\n       * @since 3.4.0\n       */\n      /**\n       * 客户端恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event Realtime#ONLINE\n       * @since 3.4.0\n       */\n      /**\n       * 进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event IMClient#OFFLINE\n       * @since 3.4.0\n       */\n      /**\n       * 恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event IMClient#ONLINE\n       * @since 3.4.0\n       */\n\n      // event proxy\n      [DISCONNECT, RECONNECT, RETRY, SCHEDULE, OFFLINE, ONLINE].forEach(event =>\n        connection.on(event, (...payload) => {\n          debug(`${event} event emitted. %o`, payload);\n          this.emit(event, ...payload);\n          if (event !== RECONNECT) {\n            internal(this).clients.forEach(client => {\n              client.emit(event, ...payload);\n            });\n          }\n        })\n      );\n      // override handleClose\n      connection.handleClose = function handleClose(event) {\n        const isFatal = [\n          ErrorCode.APP_NOT_AVAILABLE,\n          ErrorCode.INVALID_LOGIN,\n          ErrorCode.INVALID_ORIGIN,\n        ].some(errorCode => errorCode === event.code);\n        if (isFatal) {\n          // in these cases, SDK should throw.\n          this.throw(createError(event));\n        } else {\n          // reconnect\n          this.disconnect();\n        }\n      };\n      internal(this).connection = connection;\n    });\n\n    return this._openPromise;\n  }\n\n  async _getRTMServers(options) {\n    if (options.RTMServers) return shuffle(ensureArray(options.RTMServers));\n    let info;\n    const cachedEndPoints = this._cache.get('endpoints');\n    if (cachedEndPoints) {\n      info = await cachedEndPoints;\n    } else {\n      info = await this.constructor._fetchRTMServers(options);\n      this._cache.set('endpoints', info, info.ttl * 1000);\n    }\n    debug('endpoint info: %O', info);\n    return [info.server, info.secondary];\n  }\n\n  static async _getServerUrls({ appId, server }) {\n    debug('fetch server urls');\n    if (server) {\n      if (typeof server !== 'string') return server;\n      return {\n        RTMRouter: server,\n        api: server,\n      };\n    }\n    const cachedRouter = routerCache.get(appId);\n    if (cachedRouter) return cachedRouter;\n    return axios\n      .get('https://app-router.leancloud.cn/2/route', {\n        params: {\n          appId,\n        },\n        timeout: 20000,\n      })\n      .then(res => res.data)\n      .then(tap(debug))\n      .then(({ rtm_router_server: RTMRouter, api_server: api, ttl = 3600 }) => {\n        if (!RTMRouter) {\n          throw new Error('rtm router not exists');\n        }\n        const serverUrls = {\n          RTMRouter,\n          api,\n        };\n        routerCache.set(appId, serverUrls, ttl * 1000);\n        return serverUrls;\n      })\n      .catch(() => {\n        const id = appId.slice(0, 8).toLowerCase();\n        return {\n          RTMRouter: `${id}.rtm.lncld.net`,\n          api: `${id}.api.lncld.net`,\n        };\n      });\n  }\n\n  static _fetchRTMServers({ appId, ssl, server, RTMServerName }) {\n    debug('fetch endpoint info');\n    return this._getServerUrls({ appId, server })\n      .then(tap(debug))\n      .then(({ RTMRouter }) =>\n        axios\n          .get(`https://${RTMRouter}/v1/route`, {\n            params: {\n              appId,\n              secure: ssl,\n              features: isWeapp ? 'wechat' : undefined,\n              server: RTMServerName,\n              _t: Date.now(),\n            },\n            timeout: 20000,\n          })\n          .then(res => res.data)\n          .then(tap(debug))\n      );\n  }\n\n  _close() {\n    if (this._openPromise) {\n      this._openPromise.then(connection => connection.close());\n    }\n    delete this._openPromise;\n  }\n\n  /**\n   * 手动进行重连。\n   * SDK 在网络出现异常时会自动按照一定的时间间隔尝试重连，调用该方法会立即尝试重连并重置重连尝试计数器。\n   * 只能在 `SCHEDULE` 事件之后，`RETRY` 事件之前调用，如果当前网络正常或者正在进行重连，调用该方法会抛异常。\n   */\n  retry() {\n    const { connection } = internal(this);\n    if (!connection) {\n      throw new Error('no connection established');\n    }\n    if (connection.cannot('retry')) {\n      throw new Error(\n        `retrying not allowed when not disconnected. the connection is now ${\n          connection.current\n        }`\n      );\n    }\n    return connection.retry();\n  }\n\n  /**\n   * 暂停，使 SDK 进入离线状态。\n   * 你可以在网络断开、应用进入后台等时刻调用该方法让 SDK 进入离线状态，离线状态下不会尝试重连。\n   * 在浏览器中 SDK 会自动监听网络变化，因此无需手动调用该方法。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:OFFLINE\n   */\n  pause() {\n    // 这个方法常常在网络断开、进入后台时被调用，此时 connection 可能没有建立或者已经 close。\n    // 因此不像 retry，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('pause')) connection.pause();\n  }\n\n  /**\n   * 恢复在线状态。\n   * 你可以在网络恢复、应用回到前台等时刻调用该方法让 SDK 恢复在线状态，恢复在线状态后 SDK 会开始尝试重连。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:ONLINE\n   */\n  resume() {\n    // 与 pause 一样，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('resume')) connection.resume();\n  }\n\n  _registerPending(value) {\n    internal(this).pendingClients.add(value);\n  }\n\n  _deregisterPending(client) {\n    internal(this).pendingClients.delete(client);\n  }\n\n  _register(client) {\n    internal(this).clients.add(client);\n  }\n\n  _deregister(client) {\n    const _this = internal(this);\n    _this.clients.delete(client);\n    if (_this.clients.size + _this.pendingClients.size === 0) {\n      this._close();\n    }\n  }\n\n  _dispatchCommand(command) {\n    return applyDispatcher(this._plugins.beforeCommandDispatch, [\n      command,\n      this,\n    ]).then(shouldDispatch => {\n      // no plugin handled this command\n      if (shouldDispatch)\n        return debug('[WARN] Unexpected message received: %O', trim(command));\n      return false;\n    });\n  }\n}\n"],"names":["module","require","newBuilder","build","messages","push_server","messages2","JsonObjectMessage","UnreadTuple","LogItem","DataCommand","SessionCommand","ErrorCommand","DirectCommand","AckCommand","UnreadCommand","ConvCommand","RoomCommand","LogsCommand","RcpCommand","ReadTuple","MaxReadTuple","ReadCommand","PresenceCommand","ReportCommand","GenericCommand","BlacklistCommand","PatchCommand","PatchItem","ConvMemberInfo","CommandType","OpType","StatusType","global","window","EXPIRED","debug","d","Expirable","value","ttl","originalValue","expiredAt","Date","now","expired","Cache","name","_map","get","key","cache","set","tryAll","promise","promiseConstructors","length","catch","slice","tap","interceptor","isIE10","navigator","userAgent","indexOf","map","internal","has","object","compact","obj","filter","isPlainObject","prop","hasOwnProperty","call","removeNull","trim","JSON","parse","message","ensureArray","Array","isArray","target","undefined","isWeapp","wx","connectSocket","OPEN","DISCONNECT","RECONNECT","RETRY","SCHEDULE","OFFLINE","ONLINE","ERROR","MESSAGE","HEARTBEAT_TIME","TIMEOUT_TIME","DEFAULT_RETRY_STRATEGY","Math","min","attempt","requireConnected","descriptor","requireConnectedWrapper","checkConnectionAvailability","args","WebSocketPlus","_urls","urls","getUrls","protocol","WebSocket","Error","init","_protocol","resolve","then","_open","__postponeTimeoutTimer","_postponeTimeoutTimer","bind","addEventListener","__pause","can","pause","__resume","resume","open","throw","_createWs","first","reset","ws","reject","url","binaryType","onopen","onclose","error","onerror","_ws","_handleClose","onmessage","_handleMessage","_destroyWs","close","onbeforeevent","event","from","to","payload","emit","onconnected","_startConnectionKeeper","onleaveconnected","_stopConnectionKeeper","onpause","onbeforeresume","onreconnect","ondisconnected","delay","__scheduledRetry","setTimeout","is","retry","onretry","reconnect","fail","removeEventListener","currentState","current","warn","_ping","ping","_clearTimeoutTimers","_timeoutTimer","disconnect","_heartbeatTimer","setInterval","addListener","removeListener","code","reason","isFinished","handleClose","send","data","handleMessage","EventEmitter","StateMachine","create","prototype","ErrorCode","reduce","result","Number","createError","appCode","detail","errorMessage","err","COMMAND_TIMEOUT","EXPIRE","Connection","getUrl","format","version","protocolString","encodeURIComponent","_protocalFormat","_commands","_serialId","command","waitingForRespond","i","serialId","enabled","toBase64","toArrayBuffer","TypeError","cmd","op","msg","decode","e","timeout","goaway","echo","applyDecorators","decorators","forEach","decorator","_pluginName","applyDispatcher","dispatchers","resultPromise","dispatcher","shouldDispatch","debugRequest","routerCache","Realtime","plugins","options","VERSION","appId","appKey","_options","process","env","RTM_SERVER_NAME","_cache","_this","clients","pendingClients","mergedPlugins","__preRegisteredPlugins","plugin","_plugins","hook","concat","onRealtimeCreate","_request","method","path","query","headers","server","constructor","_getServerUrls","api","axios","response","status","_openPromise","noBinary","pushOfflineMessages","connection","_getRTMServers","on","_dispatchCommand","isFatal","APP_NOT_AVAILABLE","INVALID_LOGIN","INVALID_ORIGIN","some","errorCode","RTMServers","shuffle","cachedEndPoints","_fetchRTMServers","info","secondary","cachedRouter","res","RTMRouter","rtm_router_server","api_server","serverUrls","id","toLowerCase","ssl","RTMServerName","_close","cannot","_registerPending","add","_deregisterPending","client","delete","_register","_deregister","size","beforeCommandDispatch"],"mappings":"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"}